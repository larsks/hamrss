name: Playwright Container image

on:
  push:
    branches:
      - main
    paths:
      - playwright-image/Containerfile

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-image
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract playwright version
        id: version
        run: |
          PLAYWRIGHT_VERSION=$(sed -n '/^FROM/ s/.*:v\([^-]*\)-noble/\1/p' playwright-image/Containerfile)
          [ -n "$PLAYWRIGHT_VERSION" ] || exit 1
          echo "tags=${REGISTRY}/${IMAGE_NAME}:$PLAYWRIGHT_VERSION" >> "$GITHUB_OUTPUT"

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: playwright-image
          file: playwright-image/Containerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.version.outputs.tags }}
